n.veces=4
partidas=1000 #partidas=tama~no muestral
dados=matrix(sample(1:6,n.veces*partidas,T),nc=n.veces)
ganadas=sum(apply(dados==6,1,sum)>=1)
prob.est=ganadas/partidas
prob.est
n.veces=4
partidas=1000 #partidas=tama~no muestral
n.muestras<-100
prob.est<-numeric()
for (i in 1:n.muestras){
dados=matrix(sample(1:6,n.veces*partidas,T),nc=n.veces)
ganadas=sum(apply(dados==6,1,sum)>=1)
prob.est[i]=ganadas/partidas}
prob.est
plot(density(prob.est))
p=1-625/1296
desv=sqrt(p*(1-p)/partidas)
x=seq(-0.6,0.6,length=1000)
plot(density(prob.est))
lines(x,dnorm(x,mean=p,sd=desv),col=2)
p_hat <- mean(prob.est)
p_hat
p
c(p_hat- qnorm(0.975) * desv, p_hat + qnorm(0.975) * desv)
lizard <- c(6.2, 6.6, 7.1, 7.4, 7.6, 7.9,
8, 8.3, 8.4, 8.5, 8.6,
+ 8.8, 8.8, 9.1, 9.2,
9.4, 9.4, 9.7, 9.9, 10.2, 10.4, 10.8,
+ 11.3, 11.9)
hist(lizard)
t.test(lizard)
t.test(lizard, conf.level = 0.9) #modificamos nivel de confianza a 0.9
t.test(lizard, mu=8.4,conf.level = 0.9) #bilateral con 8.4 90% y H1: mu!=8.4
t.test(lizard, mu=8.4,alternative = "g" ,conf.level = 0.9) #unilateral H1: mu>8.4
t.test(lizard, mu=8.4,alternative = "l" ,conf.level = 0.9) #unilateral H1: mu<8.4
a <- t.test(lizard, mu=8.4,conf.level = 0.9)
a$conf.int
a$p.value
a$statistic
library(MASS)
help(survey)
head(survey)
gender.response <- na.omit(survey$Sex)
gender.response
n <- length(gender.response)
k <- sum(gender.response == "Female")
k
n
prop.test(k, n)
prop.test(k,n)$conf.int
x <- rnorm(200,3,2)
y <- rnorm(200,4,1)
t.test(x,y,alternative = "l")
muestra <- rexp(500,10)
plot(density(muestra))
shapiro.test(muestra)
qqnorm(muestra)
qqline(muestra)
muestra <- rnorm(4999,4,2)
plot(density(muestra))
shapiro.test(muestra)
qqnorm(muestra)
qqline(muestra)
muestra2 <- runif(500,0,200)
ks.test(muestra,muestra2)
qqplot(muestra,muestra2)
qqline(muestra)
x <- rnorm(100,3,1)
y <- rnorm(100,8,1.2)
var.test(x,y)
library(MASS)
head(survey)
tbl <- table(survey$Smoke, survey$Exer)
tbl                 #tabla de contingencia
chisq.test(tbl)  #H1: son dependientes
x <- rbinom(500,4,0.7)
y <- rbinom(500,4,0.6)
par(mfrow=c(1,2))
barplot(table(x) / sum(table(x)))
barplot(table(y) / sum(table(y)))
chisq.test(table(x),table(y))
url <- "http://www.statsci.org/data/general/flicker.txt"
flicker <- read.csv(url,sep="\t")
write.csv(flicker,"flicker.csv")
url <- "http://www.statsci.org/data/general/flicker.txt"
flicker <- read.csv(url,sep="\t")
write.csv(flicker,"flicker.csv")
flicker
is.factor(flicker$Colour)
levels(flicker$Colour)
unclass(flicker$Colour)
attach(flicker)
boxplot(Flicker ~ Colour, ylab = "Flicker")
stripchart(Flicker ~ Colour, vertical=TRUE)
meansd <- function(x) c(mean=mean(x), sd=sd(x))
by(Flicker, Colour, FUN=meansd)
#test asumiendo varianzas distintas concluye que no tienen medias iguales
oneway.test(Flicker ~ Colour)
#test asumiendo varianzas iguales concluye que no tienen medias iguales
oneway.test(Flicker ~ Colour, var.equal=TRUE)
coefint <- c(110,100,115,105,104)
t.test(coefint,mu=100)
t.test(coefint,mu=100,conf.level = 0.99)
t.test(coefint,mu=100)
t.test(coefint,mu=100,conf.level = 0.99)
t.test(coefint,mu=100)
t.test(coefint,mu=100,conf.level = 0.99)
library(MASS)
t.test(Pulse~Sex,data=survey)
t.test(Pulse~Sex,alternative="g",data=survey)
t.test(Pulse~Sex,data=survey)
t.test(Pulse~Sex,alternative="g",data=survey)
prob <- c(0.301,0.176,0.125,0.097,0.079,0.067,0.058,0.051,0.046)
freqs <- c(7, 13, 12,  9,  9, 13, 11, 10, 16)
chisq.test(freqs,p=prob)
data("PlantGrowth")
PlantGrowth
head(PlantGrowth)
attach(PlantGrowth)
str(PlantGrowth)
boxplot(weight ~ group)
stripchart(weight ~ group, vertical=TRUE)
par(mfrow=c(3,1))
hist(weight[group=="ctrl"])
hist(weight[group=="trt1"])
hist(weight[group=="trt2"])
oneway.test(weight ~ group) #son distintos
#entre las clases ctrl y trt1 njo se puede considerar que haya diferencia
PlantGrowth[group!="trt2",]
oneway.test(weight ~ group,data = PlantGrowth[group!="trt2",])
#entre las clases agrupadas ctrl+trt1 enfrentadas a trt2:
M <- PlantGrowth
M[M$group=="ctrl","group"] <- "trt1"
M
oneway.test(weight~group,M)
x<-c(1,2,3,4,5)
y<-c(1,3,3,1,5)
z<-c(1,3,3,4,4)
mean(x)
var(x)
mean(x)
var(x)
median(x)
mean(y)
median(y)
sum(x)
max(x)
min(x)
range(x)
cov(x,y)
cor(x,y)
sort(x)
sort(y)
rank(x)
order(y,decreasing=TRUE)
quantile(x)
quantile(x,c(0.1,0.5,0.9))
cumsum(y)
cumprod(y)
cummax(x)
cummin(x)
pmax(x,y,z)
pmin(x,y,z)
#para hacer estos descriptores en las columnas numÃ©ricas de un dataframe usamos sapply
data("USArrests")
head(USArrests)
sapply(USArrests,mean)
sapply(USArrests,quantile)
str(USArrests)
dados<-c(1,2,5,3,6,4,2,1,2,4,1,5,3,2,4,1,6,2,3,1,6,2,4,2,1)
table(dados)
table(dados)/length(dados)
kurtosis(dados)
library(fBasics)
skewness(dados)
kurtosis(dados)
